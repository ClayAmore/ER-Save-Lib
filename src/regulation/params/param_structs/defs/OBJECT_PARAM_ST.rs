use deku::prelude::*;
use deku::ctx::Endian;
use deku::{ DekuRead, DekuWrite};
#[derive(PartialEq, Debug, DekuRead, DekuWrite)]
#[deku(endian = "endian", ctx = "endian: Endian, version: u32")]
pub struct OBJECT_PARAM_ST {
	pub hp: i16,
	pub defense: i16,
	pub extRefTexId: i16,
	pub materialId: i16,
	pub animBreakIdMax: u8,
	#[deku(bits = 1)]
	pub isCamHit: u8,
	#[deku(bits = 1)]
	pub isBreakByPlayerCollide: u8,
	#[deku(bits = 1)]
	pub isAnimBreak: u8,
	#[deku(bits = 1)]
	pub isPenetrationBulletHit: u8,
	#[deku(bits = 1)]
	pub isChrHit: u8,
	#[deku(bits = 1)]
	pub isAttackBacklash: u8,
	#[deku(bits = 1)]
	pub isDisableBreakForFirstAppear: u8,
	#[deku(bits = 1)]
	pub isLadder: u8,
	#[deku(bits = 1)]
	pub isAnimPauseOnRemoPlay: u8,
	#[deku(bits = 1)]
	pub isDamageNoHit: u8,
	#[deku(bits = 1)]
	pub isMoveObj: u8,
	#[deku(bits = 1)]
	pub isRopeBridge: u8,
	#[deku(bits = 1)]
	pub isAddRigidImpulse_ByDamage: u8,
	#[deku(bits = 1)]
	pub isBreak_ByChrRide: u8,
	#[deku(bits = 1)]
	pub isBurn: u8,
	#[deku(bits = 1)]
	pub isBreakByEnemyCollide: u8,
	pub defaultLodParamId: i8,
	pub breakSfxId: i32,
	pub breakSfxCpId: i32,
	pub breakBulletBehaviorId: i32,
	pub breakBulletCpId: i32,
	pub breakFallHeight: u8,
	pub windEffectType_0: u8,
	pub windEffectType_1: u8,
	pub camAvoidType: u8,
	pub windEffectRate_0: f32,
	pub windEffectRate_1: f32,
	pub breakStopTime: f32,
	pub burnTime: f32,
	pub burnBraekRate: f32,
	pub burnSfxId: i32,
	pub burnSfxId_1: i32,
	pub burnSfxId_2: i32,
	pub burnSfxId_3: i32,
	pub burnBulletBehaviorId: i32,
	pub burnBulletBehaviorId_1: i32,
	pub burnBulletBehaviorId_2: i32,
	pub burnBulletBehaviorId_3: i32,
	pub burnBulletInterval: i16,
	pub navimeshFlag: u8,
	pub collisionType: u8,
	pub burnBulletDelayTime: f32,
	pub burnSfxDelayTimeMin: f32,
	pub burnSfxDelayTimeMin_1: f32,
	pub burnSfxDelayTimeMin_2: f32,
	pub burnSfxDelayTimeMin_3: f32,
	pub burnSfxDelayTimeMax: f32,
	pub burnSfxDelayTimeMax_1: f32,
	pub burnSfxDelayTimeMax_2: f32,
	pub burnSfxDelayTimeMax_3: f32,
	pub BreakAiSoundID: i32,
	pub FragmentInvisibleWaitTime: f32,
	pub FragmentInvisibleTime: f32,
	#[deku(count = "16")]
	pub pad_3: Vec<u8>,
	pub RigidPenetrationScale_Soft: f32,
	pub RigidPenetrationScale_Normal: f32,
	pub RigidPenetrationScale_Hard: f32,
	pub LandTouchSfxId: i32,
	#[deku(bits = 1)]
	pub isDamageCover: u8,
	pub pad_4: [u8;1],
	pub paintDecalTargetTextureSize: i16,
	pub lifeTime_forDC: f32,
	pub clothUpdateDist: f32,
	pub contactSeId: i32,
	pub breakLandingSfxId: i32,
	pub waypointDummyPolyId_0: i32,
	pub waypointParamId_0: i32,
	pub soundBankId: i32,
	pub refDrawParamId: i32,
	pub autoCreateDynamicOffsetHeight: f32,
	pub reserved0: i32,
	pub soundBreakSEId: i32,
	#[deku(count = "40")]
	pub pad_5: Vec<u8>,
}
