use deku::prelude::*;
use deku::ctx::Endian;
use deku::{ DekuRead, DekuWrite};
#[derive(PartialEq, Debug, DekuRead, DekuWrite)]
#[deku(endian = "endian", ctx = "endian: Endian, version: u32")]
pub struct MOVE_PARAM_ST {
	pub stayId: i32,
	pub walkF: i32,
	pub walkB: i32,
	pub walkL: i32,
	pub walkR: i32,
	pub dashF: i32,
	pub dashB: i32,
	pub dashL: i32,
	pub dashR: i32,
	pub superDash: i32,
	pub escapeF: i32,
	pub escapeB: i32,
	pub escapeL: i32,
	pub escapeR: i32,
	pub turnL: i32,
	pub trunR: i32,
	pub largeTurnL: i32,
	pub largeTurnR: i32,
	pub stepMove: i32,
	pub flyStay: i32,
	pub flyWalkF: i32,
	pub flyWalkFL: i32,
	pub flyWalkFR: i32,
	pub flyWalkFL2: i32,
	pub flyWalkFR2: i32,
	pub flyDashF: i32,
	pub flyDashFL: i32,
	pub flyDashFR: i32,
	pub flyDashFL2: i32,
	pub flyDashFR2: i32,
	pub dashEscapeF: i32,
	pub dashEscapeB: i32,
	pub dashEscapeL: i32,
	pub dashEscapeR: i32,
	pub analogMoveParamId: i32,
	pub turnNoAnimAngle: u8,
	pub turn45Angle: u8,
	pub turn90Angle: u8,
	pub turnWaitNoAnimAngle: u8,
}
