use deku::prelude::*;
use deku::ctx::Endian;
use deku::{ DekuRead, DekuWrite};
#[derive(PartialEq, Debug, DekuRead, DekuWrite)]
#[deku(endian = "endian", ctx = "endian: Endian, version: u32")]
pub struct FACE_RANGE_PARAM_ST {
	pub face_partsId: f32,
	pub skin_color_R: f32,
	pub skin_color_G: f32,
	pub skin_color_B: f32,
	pub skin_gloss: f32,
	pub skin_pores: f32,
	pub face_beard: f32,
	pub face_aroundEye: f32,
	pub face_aroundEyeColor_R: f32,
	pub face_aroundEyeColor_G: f32,
	pub face_aroundEyeColor_B: f32,
	pub face_cheek: f32,
	pub face_cheekColor_R: f32,
	pub face_cheekColor_G: f32,
	pub face_cheekColor_B: f32,
	pub face_eyeLine: f32,
	pub face_eyeLineColor_R: f32,
	pub face_eyeLineColor_G: f32,
	pub face_eyeLineColor_B: f32,
	pub face_eyeShadowDown: f32,
	pub face_eyeShadowDownColor_R: f32,
	pub face_eyeShadowDownColor_G: f32,
	pub face_eyeShadowDownColor_B: f32,
	pub face_eyeShadowUp: f32,
	pub face_eyeShadowUpColor_R: f32,
	pub face_eyeShadowUpColor_G: f32,
	pub face_eyeShadowUpColor_B: f32,
	pub face_lip: f32,
	pub face_lipColor_R: f32,
	pub face_lipColor_G: f32,
	pub face_lipColor_B: f32,
	pub body_hair: f32,
	pub body_hairColor_R: f32,
	pub body_hairColor_G: f32,
	pub body_hairColor_B: f32,
	pub eye_partsId: f32,
	pub eyeR_irisColor_R: f32,
	pub eyeR_irisColor_G: f32,
	pub eyeR_irisColor_B: f32,
	pub eyeR_irisScale: f32,
	pub eyeR_cataract: f32,
	pub eyeR_cataractColor_R: f32,
	pub eyeR_cataractColor_G: f32,
	pub eyeR_cataractColor_B: f32,
	pub eyeR_scleraColor_R: f32,
	pub eyeR_scleraColor_G: f32,
	pub eyeR_scleraColor_B: f32,
	pub eyeR_irisDistance: f32,
	pub eyeL_irisColor_R: f32,
	pub eyeL_irisColor_G: f32,
	pub eyeL_irisColor_B: f32,
	pub eyeL_irisScale: f32,
	pub eyeL_cataract: f32,
	pub eyeL_cataractColor_R: f32,
	pub eyeL_cataractColor_G: f32,
	pub eyeL_cataractColor_B: f32,
	pub eyeL_scleraColor_R: f32,
	pub eyeL_scleraColor_G: f32,
	pub eyeL_scleraColor_B: f32,
	pub eyeL_irisDistance: f32,
	pub hair_partsId: f32,
	pub hair_color_R: f32,
	pub hair_color_G: f32,
	pub hair_color_B: f32,
	pub hair_shininess: f32,
	pub hair_rootBlack: f32,
	pub hair_whiteDensity: f32,
	pub beard_partsId: f32,
	pub beard_color_R: f32,
	pub beard_color_G: f32,
	pub beard_color_B: f32,
	pub beard_shininess: f32,
	pub beard_rootBlack: f32,
	pub beard_whiteDensity: f32,
	pub eyebrow_partsId: f32,
	pub eyebrow_color_R: f32,
	pub eyebrow_color_G: f32,
	pub eyebrow_color_B: f32,
	pub eyebrow_shininess: f32,
	pub eyebrow_rootBlack: f32,
	pub eyebrow_whiteDensity: f32,
	pub eyelash_partsId: f32,
	pub eyelash_color_R: f32,
	pub eyelash_color_G: f32,
	pub eyelash_color_B: f32,
	pub accessories_partsId: f32,
	pub accessories_color_R: f32,
	pub accessories_color_G: f32,
	pub accessories_color_B: f32,
	pub decal_partsId: f32,
	pub decal_posX: f32,
	pub decal_posY: f32,
	pub decal_angle: f32,
	pub decal_scale: f32,
	pub decal_color_R: f32,
	pub decal_color_G: f32,
	pub decal_color_B: f32,
	pub decal_gloss: f32,
	pub decal_mirror: f32,
	pub chrBodyScaleHead: f32,
	pub chrBodyScaleBreast: f32,
	pub chrBodyScaleAbdomen: f32,
	pub chrBodyScaleArm: f32,
	pub chrBodyScaleLeg: f32,
	pub age: f32,
	pub gender: f32,
	pub caricatureGeometry: f32,
	pub caricatureTexture: f32,
	pub faceGeoData00: f32,
	pub faceGeoData01: f32,
	pub faceGeoData02: f32,
	pub faceGeoData03: f32,
	pub faceGeoData04: f32,
	pub faceGeoData05: f32,
	pub faceGeoData06: f32,
	pub faceGeoData07: f32,
	pub faceGeoData08: f32,
	pub faceGeoData09: f32,
	pub faceGeoData10: f32,
	pub faceGeoData11: f32,
	pub faceGeoData12: f32,
	pub faceGeoData13: f32,
	pub faceGeoData14: f32,
	pub faceGeoData15: f32,
	pub faceGeoData16: f32,
	pub faceGeoData17: f32,
	pub faceGeoData18: f32,
	pub faceGeoData19: f32,
	pub faceGeoData20: f32,
	pub faceGeoData21: f32,
	pub faceGeoData22: f32,
	pub faceGeoData23: f32,
	pub faceGeoData24: f32,
	pub faceGeoData25: f32,
	pub faceGeoData26: f32,
	pub faceGeoData27: f32,
	pub faceGeoData28: f32,
	pub faceGeoData29: f32,
	pub faceGeoData30: f32,
	pub faceGeoData31: f32,
	pub faceGeoData32: f32,
	pub faceGeoData33: f32,
	pub faceGeoData34: f32,
	pub faceGeoData35: f32,
	pub faceGeoData36: f32,
	pub faceGeoData37: f32,
	pub faceGeoData38: f32,
	pub faceGeoData39: f32,
	pub faceGeoData40: f32,
	pub faceGeoData41: f32,
	pub faceGeoData42: f32,
	pub faceGeoData43: f32,
	pub faceGeoData44: f32,
	pub faceGeoData45: f32,
	pub faceGeoData46: f32,
	pub faceGeoData47: f32,
	pub faceGeoData48: f32,
	pub faceGeoData49: f32,
	pub faceGeoData50: f32,
	pub faceGeoData51: f32,
	pub faceGeoData52: f32,
	pub faceGeoData53: f32,
	pub faceGeoData54: f32,
	pub faceGeoData55: f32,
	pub faceGeoData56: f32,
	pub faceGeoData57: f32,
	pub faceGeoData58: f32,
	pub faceGeoData59: f32,
	pub faceGeoData60: f32,
	pub faceTexData00: f32,
	pub faceTexData01: f32,
	pub faceTexData02: f32,
	pub faceTexData03: f32,
	pub faceTexData04: f32,
	pub faceTexData05: f32,
	pub faceTexData06: f32,
	pub faceTexData07: f32,
	pub faceTexData08: f32,
	pub faceTexData09: f32,
	pub faceTexData10: f32,
	pub faceTexData11: f32,
	pub faceTexData12: f32,
	pub faceTexData13: f32,
	pub faceTexData14: f32,
	pub faceTexData15: f32,
	pub faceTexData16: f32,
	pub faceTexData17: f32,
	pub faceTexData18: f32,
	pub faceTexData19: f32,
	pub faceTexData20: f32,
	pub faceTexData21: f32,
	pub faceTexData22: f32,
	pub faceTexData23: f32,
	pub faceTexData24: f32,
	pub faceTexData25: f32,
	pub faceTexData26: f32,
	pub faceTexData27: f32,
	pub faceTexData28: f32,
	pub faceTexData29: f32,
	pub faceTexData30: f32,
	pub faceTexData31: f32,
	pub faceTexData32: f32,
	pub faceTexData33: f32,
	pub faceTexData34: f32,
	pub faceTexData35: f32,
	pub burn_scar: f32,
}
