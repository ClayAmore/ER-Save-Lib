use deku::prelude::*;
use deku::ctx::Endian;
use deku::{ DekuRead, DekuWrite};
#[derive(PartialEq, Debug, DekuRead, DekuWrite)]
#[deku(endian = "endian", ctx = "endian: Endian, version: u32")]
pub struct MAGIC_PARAM_ST {
	#[deku(bits = 7)]
	pub disableParamReserve1: u8,
	#[deku(bits = 1)]
	pub disableParam_NT: u8,
	pub disableParamReserve2: [u8;3],
	pub yesNoDialogMessageId: i32,
	pub limitCancelSpEffectId: i32,
	pub sortId: i16,
	pub requirementLuck: u8,
	pub aiNotifyType: u8,
	pub mp: i16,
	pub stamina: i16,
	pub iconId: i16,
	pub behaviorId: i16,
	pub mtrlItemId: i16,
	pub replaceMagicId: i16,
	pub maxQuantity: i16,
	pub refCategory1: u8,
	pub overDexterity: u8,
	pub refCategory2: u8,
	pub slotLength: u8,
	pub requirementIntellect: u8,
	pub requirementFaith: u8,
	pub analogDexterityMin: u8,
	pub analogDexterityMax: u8,
	pub ezStateBehaviorType: u8,
	pub refCategory3: u8,
	pub spEffectCategory: u8,
	pub refType: u8,
	pub opmeMenuType: u8,
	pub refCategory4: u8,
	pub hasSpEffectType: i16,
	pub replaceCategory: u8,
	pub useLimitCategory: u8,
	#[deku(bits = 1)]
	pub vowType7: u8,
	#[deku(bits = 1)]
	pub vowType6: u8,
	#[deku(bits = 1)]
	pub vowType5: u8,
	#[deku(bits = 1)]
	pub vowType4: u8,
	#[deku(bits = 1)]
	pub vowType3: u8,
	#[deku(bits = 1)]
	pub vowType2: u8,
	#[deku(bits = 1)]
	pub vowType1: u8,
	#[deku(bits = 1)]
	pub vowType0: u8,
	#[deku(bits = 1)]
	pub enable_black: u8,
	#[deku(bits = 1)]
	pub enable_white: u8,
	#[deku(bits = 1)]
	pub enable_gray: u8,
	#[deku(bits = 1)]
	pub enable_live: u8,
	#[deku(bits = 1)]
	pub isShieldEnchant: u8,
	#[deku(bits = 1)]
	pub isEnchant: u8,
	#[deku(bits = 1)]
	pub enable_multi_only: u8,
	#[deku(bits = 1)]
	pub enable_multi: u8,
	#[deku(bits = 1)]
	pub pad_1: u8,
	#[deku(bits = 1)]
	pub isUseNoAttackRegion: u8,
	#[deku(bits = 1)]
	pub disableRiding: u8,
	#[deku(bits = 1)]
	pub enableRiding: u8,
	#[deku(bits = 1)]
	pub isWarpMagic: u8,
	#[deku(bits = 1)]
	pub isValidTough_ProtSADmg: u8,
	#[deku(bits = 1)]
	pub castResonanceMagic: u8,
	#[deku(bits = 1)]
	pub disableOffline: u8,
	#[deku(bits = 1)]
	pub vowType15: u8,
	#[deku(bits = 1)]
	pub vowType14: u8,
	#[deku(bits = 1)]
	pub vowType13: u8,
	#[deku(bits = 1)]
	pub vowType12: u8,
	#[deku(bits = 1)]
	pub vowType11: u8,
	#[deku(bits = 1)]
	pub vowType10: u8,
	#[deku(bits = 1)]
	pub vowType9: u8,
	#[deku(bits = 1)]
	pub vowType8: u8,
	pub castSfxId: i32,
	pub fireSfxId: i32,
	pub effectSfxId: i32,
	pub toughnessCorrectRate: f32,
	pub ReplacementStatusType: u8,
	pub ReplacementStatus1: i8,
	pub ReplacementStatus2: i8,
	pub ReplacementStatus3: i8,
	pub ReplacementStatus4: i8,
	pub refCategory5: u8,
	pub consumeSA: i16,
	pub ReplacementMagic1: i32,
	pub ReplacementMagic2: i32,
	pub ReplacementMagic3: i32,
	pub ReplacementMagic4: i32,
	pub mp_charge: i16,
	pub stamina_charge: i16,
	pub createLimitGroupId: u8,
	pub refCategory6: u8,
	pub subCategory1: u8,
	pub subCategory2: u8,
	pub refCategory7: u8,
	pub refCategory8: u8,
	pub refCategory9: u8,
	pub refCategory10: u8,
	pub refId1: i32,
	pub refId2: i32,
	pub refId3: i32,
	pub aiUseJudgeId: i32,
	pub refId4: i32,
	pub refId5: i32,
	pub refId6: i32,
	pub refId7: i32,
	pub refId8: i32,
	pub refId9: i32,
	pub refId10: i32,
	pub consumeType1: u8,
	pub consumeType2: u8,
	pub consumeType3: u8,
	pub consumeType4: u8,
	pub consumeType5: u8,
	pub consumeType6: u8,
	pub consumeType7: u8,
	pub consumeType8: u8,
	pub consumeType9: u8,
	pub consumeType10: u8,
	pub consumeLoopMP_forMenu: i16,
	pub pad: [u8;8],
}
