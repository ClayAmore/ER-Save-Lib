use deku::prelude::*;
use deku::ctx::Endian;
use deku::{ DekuRead, DekuWrite};
#[derive(PartialEq, Debug, DekuRead, DekuWrite)]
#[deku(endian = "endian", ctx = "endian: Endian, version: u32")]
pub struct EQUIP_PARAM_PROTECTOR_ST {
	#[deku(bits = 7)]
	pub disableParamReserve1: u8,
	#[deku(bits = 1)]
	pub disableParam_NT: u8,
	pub disableParamReserve2: [u8;3],
	pub sortId: i32,
	pub wanderingEquipId: i32,
	pub resistSleep: i16,
	pub resistMadness: i16,
	pub saDurability: f32,
	pub toughnessCorrectRate: f32,
	pub fixPrice: i32,
	pub basicPrice: i32,
	pub sellValue: i32,
	pub weight: f32,
	pub residentSpEffectId: i32,
	pub residentSpEffectId2: i32,
	pub residentSpEffectId3: i32,
	pub materialSetId: i32,
	pub partsDamageRate: f32,
	pub corectSARecover: f32,
	pub originEquipPro: i32,
	pub originEquipPro1: i32,
	pub originEquipPro2: i32,
	pub originEquipPro3: i32,
	pub originEquipPro4: i32,
	pub originEquipPro5: i32,
	pub originEquipPro6: i32,
	pub originEquipPro7: i32,
	pub originEquipPro8: i32,
	pub originEquipPro9: i32,
	pub originEquipPro10: i32,
	pub originEquipPro11: i32,
	pub originEquipPro12: i32,
	pub originEquipPro13: i32,
	pub originEquipPro14: i32,
	pub originEquipPro15: i32,
	pub faceScaleM_ScaleX: f32,
	pub faceScaleM_ScaleZ: f32,
	pub faceScaleM_MaxX: f32,
	pub faceScaleM_MaxZ: f32,
	pub faceScaleF_ScaleX: f32,
	pub faceScaleF_ScaleZ: f32,
	pub faceScaleF_MaxX: f32,
	pub faceScaleF_MaxZ: f32,
	pub qwcId: i32,
	pub equipModelId: i16,
	pub iconIdM: i16,
	pub iconIdF: i16,
	pub knockBack: i16,
	pub knockbackBounceRate: i16,
	pub durability: i16,
	pub durabilityMax: i16,
	pub pad03: [u8;2],
	pub defFlickPower: i16,
	pub defensePhysics: i16,
	pub defenseMagic: i16,
	pub defenseFire: i16,
	pub defenseThunder: i16,
	pub defenseSlash: i16,
	pub defenseBlow: i16,
	pub defenseThrust: i16,
	pub resistPoison: i16,
	pub resistDisease: i16,
	pub resistBlood: i16,
	pub resistCurse: i16,
	pub reinforceTypeId: i16,
	pub trophySGradeId: i16,
	pub shopLv: i16,
	pub knockbackParamId: u8,
	pub flickDamageCutRate: u8,
	pub equipModelCategory: u8,
	pub equipModelGender: u8,
	pub protectorCategory: u8,
	pub rarity: u8,
	pub sortGroupId: u8,
	pub partsDmgType: u8,
	pub pad04: [u8;2],
	#[deku(bits = 1)]
	pub isSkipWeakDamageAnim: u8,
	#[deku(bits = 1)]
	pub useFaceScale: u8,
	#[deku(bits = 1)]
	pub legEquip: u8,
	#[deku(bits = 1)]
	pub armEquip: u8,
	#[deku(bits = 1)]
	pub bodyEquip: u8,
	#[deku(bits = 1)]
	pub headEquip: u8,
	#[deku(bits = 1)]
	pub isDeposit: u8,
	#[deku(bits = 1)]
	pub pad06: u8,
	pub defenseMaterialVariationValue_Weak: u8,
	pub autoFootEffectDecalBaseId2: i16,
	pub autoFootEffectDecalBaseId3: i16,
	pub defenseMaterialVariationValue: u8,
	#[deku(bits = 2)]
	pub showDialogCondType: u8,
	#[deku(bits = 1)]
	pub showLogCondType: u8,
	#[deku(bits = 1)]
	pub simpleModelForDlc: u8,
	#[deku(bits = 1)]
	pub disableMultiDropShare: u8,
	#[deku(bits = 1)]
	pub isDrop: u8,
	#[deku(bits = 1)]
	pub isDiscard: u8,
	#[deku(bits = 1)]
	pub pad: u8,
	pub neutralDamageCutRate: f32,
	pub slashDamageCutRate: f32,
	pub blowDamageCutRate: f32,
	pub thrustDamageCutRate: f32,
	pub magicDamageCutRate: f32,
	pub fireDamageCutRate: f32,
	pub thunderDamageCutRate: f32,
	pub defenseMaterialSfx1: i16,
	pub defenseMaterialSfx_Weak1: i16,
	pub defenseMaterial1: i16,
	pub defenseMaterial_Weak1: i16,
	pub defenseMaterialSfx2: i16,
	pub defenseMaterialSfx_Weak2: i16,
	pub footMaterialSe: i16,
	pub defenseMaterial_Weak2: i16,
	pub autoFootEffectDecalBaseId1: i32,
	pub toughnessDamageCutRate: f32,
	pub toughnessRecoverCorrection: f32,
	pub darkDamageCutRate: f32,
	pub defenseDark: i16,
	#[deku(bits = 1)]
	pub invisibleFlag54: u8,
	#[deku(bits = 1)]
	pub invisibleFlag53: u8,
	#[deku(bits = 1)]
	pub invisibleFlag52: u8,
	#[deku(bits = 1)]
	pub invisibleFlag51: u8,
	#[deku(bits = 1)]
	pub invisibleFlag50: u8,
	#[deku(bits = 1)]
	pub invisibleFlag49: u8,
	#[deku(bits = 1)]
	pub invisibleFlag48: u8,
	#[deku(bits = 1)]
	pub invisibleFlag61: u8,
	#[deku(bits = 1)]
	pub invisibleFlag60: u8,
	#[deku(bits = 1)]
	pub invisibleFlag59: u8,
	#[deku(bits = 1)]
	pub invisibleFlag58: u8,
	#[deku(bits = 1)]
	pub invisibleFlag57: u8,
	#[deku(bits = 1)]
	pub invisibleFlag56: u8,
	#[deku(bits = 1)]
	pub invisibleFlag55: u8,
	#[deku(bits = 1)]
	pub invisibleFlag68: u8,
	#[deku(bits = 1)]
	pub invisibleFlag67: u8,
	#[deku(bits = 1)]
	pub invisibleFlag66: u8,
	#[deku(bits = 1)]
	pub invisibleFlag65: u8,
	#[deku(bits = 1)]
	pub invisibleFlag64: u8,
	#[deku(bits = 1)]
	pub invisibleFlag63: u8,
	#[deku(bits = 1)]
	pub invisibleFlag62: u8,
	#[deku(bits = 1)]
	pub invisibleFlag75: u8,
	#[deku(bits = 1)]
	pub invisibleFlag74: u8,
	#[deku(bits = 1)]
	pub invisibleFlag73: u8,
	#[deku(bits = 1)]
	pub invisibleFlag72: u8,
	#[deku(bits = 1)]
	pub invisibleFlag71: u8,
	#[deku(bits = 1)]
	pub invisibleFlag70: u8,
	#[deku(bits = 1)]
	pub invisibleFlag69: u8,
	#[deku(bits = 7)]
	pub padbit: u8,
	#[deku(bits = 1)]
	pub invisibleFlag80: u8,
	#[deku(bits = 1)]
	pub invisibleFlag79: u8,
	#[deku(bits = 1)]
	pub invisibleFlag78: u8,
	#[deku(bits = 1)]
	pub invisibleFlag77: u8,
	#[deku(bits = 1)]
	pub invisibleFlag76: u8,
	pub postureControlId: u8,
	pub pad2: [u8;4],
	pub saleValue: i32,
	pub resistFreeze: i16,
	pub invisibleFlag_SexVer00: u8,
	pub invisibleFlag_SexVer01: u8,
	pub invisibleFlag_SexVer02: u8,
	pub invisibleFlag_SexVer03: u8,
	pub invisibleFlag_SexVer04: u8,
	pub invisibleFlag_SexVer05: u8,
	pub invisibleFlag_SexVer06: u8,
	pub invisibleFlag_SexVer07: u8,
	pub invisibleFlag_SexVer08: u8,
	pub invisibleFlag_SexVer09: u8,
	pub invisibleFlag_SexVer10: u8,
	pub invisibleFlag_SexVer11: u8,
	pub invisibleFlag_SexVer12: u8,
	pub invisibleFlag_SexVer13: u8,
	pub invisibleFlag_SexVer14: u8,
	pub invisibleFlag_SexVer15: u8,
	pub invisibleFlag_SexVer16: u8,
	pub invisibleFlag_SexVer17: u8,
	pub invisibleFlag_SexVer18: u8,
	pub invisibleFlag_SexVer19: u8,
	pub invisibleFlag_SexVer20: u8,
	pub invisibleFlag_SexVer21: u8,
	pub invisibleFlag_SexVer22: u8,
	pub invisibleFlag_SexVer23: u8,
	pub invisibleFlag_SexVer24: u8,
	pub invisibleFlag_SexVer25: u8,
	pub invisibleFlag_SexVer26: u8,
	pub invisibleFlag_SexVer27: u8,
	pub invisibleFlag_SexVer28: u8,
	pub invisibleFlag_SexVer29: u8,
	pub invisibleFlag_SexVer30: u8,
	pub invisibleFlag_SexVer31: u8,
	pub invisibleFlag_SexVer32: u8,
	pub invisibleFlag_SexVer33: u8,
	pub invisibleFlag_SexVer34: u8,
	pub invisibleFlag_SexVer35: u8,
	pub invisibleFlag_SexVer36: u8,
	pub invisibleFlag_SexVer37: u8,
	pub invisibleFlag_SexVer38: u8,
	pub invisibleFlag_SexVer39: u8,
	pub invisibleFlag_SexVer40: u8,
	pub invisibleFlag_SexVer41: u8,
	pub invisibleFlag_SexVer42: u8,
	pub invisibleFlag_SexVer43: u8,
	pub invisibleFlag_SexVer44: u8,
	pub invisibleFlag_SexVer45: u8,
	pub invisibleFlag_SexVer46: u8,
	pub invisibleFlag_SexVer47: u8,
	pub invisibleFlag_SexVer48: u8,
	pub invisibleFlag_SexVer49: u8,
	pub invisibleFlag_SexVer50: u8,
	pub invisibleFlag_SexVer51: u8,
	pub invisibleFlag_SexVer52: u8,
	pub invisibleFlag_SexVer53: u8,
	pub invisibleFlag_SexVer54: u8,
	pub invisibleFlag_SexVer55: u8,
	pub invisibleFlag_SexVer56: u8,
	pub invisibleFlag_SexVer57: u8,
	pub invisibleFlag_SexVer58: u8,
	pub invisibleFlag_SexVer59: u8,
	pub invisibleFlag_SexVer60: u8,
	pub invisibleFlag_SexVer61: u8,
	pub invisibleFlag_SexVer62: u8,
	pub invisibleFlag_SexVer63: u8,
	pub invisibleFlag_SexVer64: u8,
	pub invisibleFlag_SexVer65: u8,
	pub invisibleFlag_SexVer66: u8,
	pub invisibleFlag_SexVer67: u8,
	pub invisibleFlag_SexVer68: u8,
	pub invisibleFlag_SexVer69: u8,
	pub invisibleFlag_SexVer70: u8,
	pub invisibleFlag_SexVer71: u8,
	pub invisibleFlag_SexVer72: u8,
	pub invisibleFlag_SexVer73: u8,
	pub invisibleFlag_SexVer74: u8,
	pub invisibleFlag_SexVer75: u8,
	pub invisibleFlag_SexVer76: u8,
	pub invisibleFlag_SexVer77: u8,
	pub invisibleFlag_SexVer78: u8,
	pub invisibleFlag_SexVer79: u8,
	pub invisibleFlag_SexVer80: u8,
	pub invisibleFlag_SexVer81: u8,
	pub invisibleFlag_SexVer82: u8,
	pub invisibleFlag_SexVer83: u8,
	pub invisibleFlag_SexVer84: u8,
	pub invisibleFlag_SexVer85: u8,
	pub invisibleFlag_SexVer86: u8,
	pub invisibleFlag_SexVer87: u8,
	pub invisibleFlag_SexVer88: u8,
	pub invisibleFlag_SexVer89: u8,
	pub invisibleFlag_SexVer90: u8,
	pub invisibleFlag_SexVer91: u8,
	pub invisibleFlag_SexVer92: u8,
	pub invisibleFlag_SexVer93: u8,
	pub invisibleFlag_SexVer94: u8,
	pub invisibleFlag_SexVer95: u8,
	#[deku(count = "14")]
	pub pad404: Vec<u8>,
}
