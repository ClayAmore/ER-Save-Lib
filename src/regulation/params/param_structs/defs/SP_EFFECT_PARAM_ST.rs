use deku::prelude::*;
use deku::ctx::Endian;
use deku::{ DekuRead, DekuWrite};
#[derive(PartialEq, Debug, DekuRead, DekuWrite)]
#[deku(endian = "endian", ctx = "endian: Endian, version: u32")]
pub struct SP_EFFECT_PARAM_ST {
	pub iconId: i32,
	pub conditionHp: f32,
	pub effectEndurance: f32,
	pub motionInterval: f32,
	pub maxHpRate: f32,
	pub maxMpRate: f32,
	pub maxStaminaRate: f32,
	pub slashDamageCutRate: f32,
	pub blowDamageCutRate: f32,
	pub thrustDamageCutRate: f32,
	pub neutralDamageCutRate: f32,
	pub magicDamageCutRate: f32,
	pub fireDamageCutRate: f32,
	pub thunderDamageCutRate: f32,
	pub physicsAttackRate: f32,
	pub magicAttackRate: f32,
	pub fireAttackRate: f32,
	pub thunderAttackRate: f32,
	pub physicsAttackPowerRate: f32,
	pub magicAttackPowerRate: f32,
	pub fireAttackPowerRate: f32,
	pub thunderAttackPowerRate: f32,
	pub physicsAttackPower: i32,
	pub magicAttackPower: i32,
	pub fireAttackPower: i32,
	pub thunderAttackPower: i32,
	pub physicsDiffenceRate: f32,
	pub magicDiffenceRate: f32,
	pub fireDiffenceRate: f32,
	pub thunderDiffenceRate: f32,
	pub physicsDiffence: i32,
	pub magicDiffence: i32,
	pub fireDiffence: i32,
	pub thunderDiffence: i32,
	pub NoGuardDamageRate: f32,
	pub vitalSpotChangeRate: f32,
	pub normalSpotChangeRate: f32,
	pub lookAtTargetPosOffset: f32,
	pub behaviorId: i32,
	pub changeHpRate: f32,
	pub changeHpPoint: i32,
	pub changeMpRate: f32,
	pub changeMpPoint: i32,
	pub mpRecoverChangeSpeed: i32,
	pub changeStaminaRate: f32,
	pub changeStaminaPoint: i32,
	pub staminaRecoverChangeSpeed: i32,
	pub magicEffectTimeChange: f32,
	pub insideDurability: i32,
	pub maxDurability: i32,
	pub staminaAttackRate: f32,
	pub poizonAttackPower: i32,
	pub diseaseAttackPower: i32,
	pub bloodAttackPower: i32,
	pub curseAttackPower: i32,
	pub fallDamageRate: f32,
	pub soulRate: f32,
	pub equipWeightChangeRate: f32,
	pub allItemWeightChangeRate: f32,
	pub soul: i32,
	pub animIdOffset: i32,
	pub haveSoulRate: f32,
	pub targetPriority: f32,
	pub sightSearchEnemyRate: f32,
	pub hearingSearchEnemyRate: f32,
	pub grabityRate: f32,
	pub registPoizonChangeRate: f32,
	pub registDiseaseChangeRate: f32,
	pub registBloodChangeRate: f32,
	pub registCurseChangeRate: f32,
	pub soulStealRate: f32,
	pub lifeReductionRate: f32,
	pub hpRecoverRate: f32,
	pub replaceSpEffectId: i32,
	pub cycleOccurrenceSpEffectId: i32,
	pub atkOccurrenceSpEffectId: i32,
	pub guardDefFlickPowerRate: f32,
	pub guardStaminaCutRate: f32,
	pub rayCastPassedTime: i16,
	pub magicSubCategoryChange1: u8,
	pub magicSubCategoryChange2: u8,
	pub bowDistRate: i16,
	pub spCategory: i16,
	pub categoryPriority: u8,
	pub saveCategory: i8,
	pub changeMagicSlot: u8,
	pub changeMiracleSlot: u8,
	pub heroPointDamage: i8,
	pub defFlickPower: u8,
	pub flickDamageCutRate: u8,
	pub bloodDamageRate: u8,
	pub dmgLv_None: i8,
	pub dmgLv_S: i8,
	pub dmgLv_M: i8,
	pub dmgLv_L: i8,
	pub dmgLv_BlowM: i8,
	pub dmgLv_Push: i8,
	pub dmgLv_Strike: i8,
	pub dmgLv_BlowS: i8,
	pub dmgLv_Min: i8,
	pub dmgLv_Uppercut: i8,
	pub dmgLv_BlowLL: i8,
	pub dmgLv_Breath: i8,
	pub atkAttribute: u8,
	pub spAttribute: u8,
	pub stateInfo: i16,
	pub wepParamChange: u8,
	pub moveType: u8,
	pub lifeReductionType: i16,
	pub throwCondition: u8,
	pub addBehaviorJudgeId_condition: i8,
	pub freezeDamageRate: u8,
	#[deku(bits = 1)]
	pub disableSleep: u8,
	#[deku(bits = 1)]
	pub effectTargetGhost: u8,
	#[deku(bits = 1)]
	pub effectTargetLive: u8,
	#[deku(bits = 1)]
	pub effectTargetAI: u8,
	#[deku(bits = 1)]
	pub effectTargetPlayer: u8,
	#[deku(bits = 1)]
	pub effectTargetEnemy: u8,
	#[deku(bits = 1)]
	pub effectTargetFriend: u8,
	#[deku(bits = 1)]
	pub effectTargetSelf: u8,
	#[deku(bits = 1)]
	pub magParamChange: u8,
	#[deku(bits = 1)]
	pub bGameClearBonus: u8,
	#[deku(bits = 1)]
	pub bAdjustFaithAblity: u8,
	#[deku(bits = 1)]
	pub bAdjustMagicAblity: u8,
	#[deku(bits = 1)]
	pub regainGaugeDamage: u8,
	#[deku(bits = 1)]
	pub dispIconNonactive: u8,
	#[deku(bits = 1)]
	pub effectTargetAttacker: u8,
	#[deku(bits = 1)]
	pub disableMadness: u8,
	#[deku(bits = 1)]
	pub requestNpcInveda: u8,
	#[deku(bits = 1)]
	pub requestLeaveSession: u8,
	#[deku(bits = 1)]
	pub requestKickSession: u8,
	#[deku(bits = 1)]
	pub requestForceJoinBlackSOS: u8,
	#[deku(bits = 1)]
	pub requestBlackSOS: u8,
	#[deku(bits = 1)]
	pub requestSOS: u8,
	#[deku(bits = 1)]
	pub clearSoul: u8,
	#[deku(bits = 1)]
	pub miracleParamChange: u8,
	#[deku(bits = 1)]
	pub fakeTargetIgnoreUndead: u8,
	#[deku(bits = 1)]
	pub fakeTargetIgnore: u8,
	#[deku(bits = 1)]
	pub antiMagicIgnore: u8,
	#[deku(bits = 1)]
	pub hearingSearchCutIgnore: u8,
	#[deku(bits = 1)]
	pub sightSearchCutIgnore: u8,
	#[deku(bits = 1)]
	pub corrosionIgnore: u8,
	#[deku(bits = 1)]
	pub bCurrHPIndependeMaxHP: u8,
	#[deku(bits = 1)]
	pub noDead: u8,
	#[deku(bits = 1)]
	pub enableLifeTime: u8,
	#[deku(bits = 1)]
	pub enableCharm: u8,
	#[deku(bits = 1)]
	pub disableCurse: u8,
	#[deku(bits = 1)]
	pub disableBlood: u8,
	#[deku(bits = 1)]
	pub disableDisease: u8,
	#[deku(bits = 1)]
	pub disablePoison: u8,
	#[deku(bits = 1)]
	pub grabityIgnore: u8,
	#[deku(bits = 1)]
	pub fakeTargetIgnoreAnimal: u8,
	#[deku(bits = 1)]
	pub replanningOnFire: u8,
	#[deku(bits = 1)]
	pub hasTarget: u8,
	#[deku(bits = 1)]
	pub isExtendSpEffectLife: u8,
	#[deku(bits = 1)]
	pub requestLeaveColiseumSession: u8,
	#[deku(bits = 1)]
	pub throwAttackParamChange: u8,
	#[deku(bits = 1)]
	pub eraseOnBonfireRecover: u8,
	#[deku(bits = 1)]
	pub bAdjustAgilityAblity: u8,
	#[deku(bits = 1)]
	pub bAdjustStrengthAblity: u8,
	#[deku(bits = 1)]
	pub vowType7: u8,
	#[deku(bits = 1)]
	pub vowType6: u8,
	#[deku(bits = 1)]
	pub vowType5: u8,
	#[deku(bits = 1)]
	pub vowType4: u8,
	#[deku(bits = 1)]
	pub vowType3: u8,
	#[deku(bits = 1)]
	pub vowType2: u8,
	#[deku(bits = 1)]
	pub vowType1: u8,
	#[deku(bits = 1)]
	pub vowType0: u8,
	#[deku(bits = 1)]
	pub vowType15: u8,
	#[deku(bits = 1)]
	pub vowType14: u8,
	#[deku(bits = 1)]
	pub vowType13: u8,
	#[deku(bits = 1)]
	pub vowType12: u8,
	#[deku(bits = 1)]
	pub vowType11: u8,
	#[deku(bits = 1)]
	pub vowType10: u8,
	#[deku(bits = 1)]
	pub vowType9: u8,
	#[deku(bits = 1)]
	pub vowType8: u8,
	pub repAtkDmgLv: i8,
	pub sightSearchRate: f32,
	#[deku(bits = 1)]
	pub isIgnoreNoDamage: u8,
	#[deku(bits = 1)]
	pub isWaitModeDelete: u8,
	#[deku(bits = 1)]
	pub isContractSpEffectLife: u8,
	#[deku(bits = 1)]
	pub effectTargetPcDeceased: u8,
	#[deku(bits = 1)]
	pub effectTargetPcHorse: u8,
	#[deku(bits = 1)]
	pub effectTargetSelfTarget: u8,
	#[deku(bits = 1)]
	pub effectTargetFriendlyTarget: u8,
	#[deku(bits = 1)]
	pub effectTargetOpposeTarget: u8,
	pub changeTeamType: i8,
	pub dmypolyId: i16,
	pub vfxId: i32,
	pub accumuOverFireId: i32,
	pub accumuOverVal: i32,
	pub accumuUnderFireId: i32,
	pub accumuUnderVal: i32,
	pub accumuVal: i32,
	pub eye_angX: u8,
	pub eye_angY: u8,
	pub addDeceasedLv: i16,
	pub vfxId1: i32,
	pub vfxId2: i32,
	pub vfxId3: i32,
	pub vfxId4: i32,
	pub vfxId5: i32,
	pub vfxId6: i32,
	pub vfxId7: i32,
	pub freezeAttackPower: i32,
	pub AppearAiSoundId: i32,
	pub addFootEffectSfxId: i16,
	pub dexterityCancelSystemOnlyAddDexterity: i8,
	pub teamOffenseEffectivity: i8,
	pub toughnessDamageCutRate: f32,
	pub weakDmgRateA: f32,
	pub weakDmgRateB: f32,
	pub weakDmgRateC: f32,
	pub weakDmgRateD: f32,
	pub weakDmgRateE: f32,
	pub weakDmgRateF: f32,
	pub darkDamageCutRate: f32,
	pub darkDiffenceRate: f32,
	pub darkDiffence: i32,
	pub darkAttackRate: f32,
	pub darkAttackPowerRate: f32,
	pub darkAttackPower: i32,
	pub antiDarkSightRadius: f32,
	pub antiDarkSightDmypolyId: i32,
	pub conditionHpRate: f32,
	pub consumeStaminaRate: f32,
	pub itemDropRate: f32,
	pub changePoisonResistPoint: i32,
	pub changeDiseaseResistPoint: i32,
	pub changeBloodResistPoint: i32,
	pub changeCurseResistPoint: i32,
	pub changeFreezeResistPoint: i32,
	pub slashAttackRate: f32,
	pub blowAttackRate: f32,
	pub thrustAttackRate: f32,
	pub neutralAttackRate: f32,
	pub slashAttackPowerRate: f32,
	pub blowAttackPowerRate: f32,
	pub thrustAttackPowerRate: f32,
	pub neutralAttackPowerRate: f32,
	pub slashAttackPower: i32,
	pub blowAttackPower: i32,
	pub thrustAttackPower: i32,
	pub neutralAttackPower: i32,
	pub changeStrengthPoint: i32,
	pub changeAgilityPoint: i32,
	pub changeMagicPoint: i32,
	pub changeFaithPoint: i32,
	pub changeLuckPoint: i32,
	pub recoverArtsPoint_Str: i8,
	pub recoverArtsPoint_Dex: i8,
	pub recoverArtsPoint_Magic: i8,
	pub recoverArtsPoint_Miracle: i8,
	pub madnessDamageRate: u8,
	#[deku(bits = 1)]
	pub isCheckAboveShadowTest: u8,
	#[deku(bits = 1)]
	pub isStopSearchedNotify: u8,
	#[deku(bits = 1)]
	pub shamanParamChange: u8,
	#[deku(bits = 1)]
	pub isDisableNetSync: u8,
	#[deku(bits = 1)]
	pub disableFreeze: u8,
	#[deku(bits = 1)]
	pub dontDeleteOnDead: u8,
	#[deku(bits = 1)]
	pub isUseAtkParamAtkPowerCorrect: u8,
	#[deku(bits = 1)]
	pub isUseStatusAilmentAtkPowerCorrect: u8,
	pub addBehaviorJudgeId_add: i16,
	pub saReceiveDamageRate: f32,
	pub defPlayerDmgCorrectRate_Physics: f32,
	pub defPlayerDmgCorrectRate_Magic: f32,
	pub defPlayerDmgCorrectRate_Fire: f32,
	pub defPlayerDmgCorrectRate_Thunder: f32,
	pub defPlayerDmgCorrectRate_Dark: f32,
	pub defEnemyDmgCorrectRate_Physics: f32,
	pub defEnemyDmgCorrectRate_Magic: f32,
	pub defEnemyDmgCorrectRate_Fire: f32,
	pub defEnemyDmgCorrectRate_Thunder: f32,
	pub defEnemyDmgCorrectRate_Dark: f32,
	pub defObjDmgCorrectRate: f32,
	pub atkPlayerDmgCorrectRate_Physics: f32,
	pub atkPlayerDmgCorrectRate_Magic: f32,
	pub atkPlayerDmgCorrectRate_Fire: f32,
	pub atkPlayerDmgCorrectRate_Thunder: f32,
	pub atkPlayerDmgCorrectRate_Dark: f32,
	pub atkEnemyDmgCorrectRate_Physics: f32,
	pub atkEnemyDmgCorrectRate_Magic: f32,
	pub atkEnemyDmgCorrectRate_Fire: f32,
	pub atkEnemyDmgCorrectRate_Thunder: f32,
	pub atkEnemyDmgCorrectRate_Dark: f32,
	pub registFreezeChangeRate: f32,
	pub invocationConditionsStateChange1: i16,
	pub invocationConditionsStateChange2: i16,
	pub invocationConditionsStateChange3: i16,
	pub hearingAiSoundLevel: i16,
	pub chrProxyHeightRate: f32,
	pub addAwarePointCorrectValue_forMe: f32,
	pub addAwarePointCorrectValue_forTarget: f32,
	pub sightSearchEnemyAdd: f32,
	pub sightSearchAdd: f32,
	pub hearingSearchAdd: f32,
	pub hearingSearchRate: f32,
	pub hearingSearchEnemyAdd: f32,
	pub value_Magnification: f32,
	pub artsConsumptionRate: f32,
	pub magicConsumptionRate: f32,
	pub shamanConsumptionRate: f32,
	pub miracleConsumptionRate: f32,
	pub changeHpEstusFlaskRate: i32,
	pub changeHpEstusFlaskPoint: i32,
	pub changeMpEstusFlaskRate: i32,
	pub changeMpEstusFlaskPoint: i32,
	pub changeHpEstusFlaskCorrectRate: f32,
	pub changeMpEstusFlaskCorrectRate: f32,
	pub applyIdOnGetSoul: i32,
	pub extendLifeRate: f32,
	pub contractLifeRate: f32,
	pub defObjectAttackPowerRate: f32,
	pub effectEndDeleteDecalGroupId: i16,
	pub addLifeForceStatus: i8,
	pub addWillpowerStatus: i8,
	pub addEndureStatus: i8,
	pub addVitalityStatus: i8,
	pub addStrengthStatus: i8,
	pub addDexterityStatus: i8,
	pub addMagicStatus: i8,
	pub addFaithStatus: i8,
	pub addLuckStatus: i8,
	pub deleteCriteriaDamage: u8,
	pub magicSubCategoryChange3: u8,
	pub spAttributeVariationValue: u8,
	pub atkFlickPower: u8,
	pub wetConditionDepth: u8,
	pub changeSaRecoveryVelocity: f32,
	pub regainRate: f32,
	pub saAttackPowerRate: f32,
	pub sleepAttackPower: i32,
	pub madnessAttackPower: i32,
	pub registSleepChangeRate: f32,
	pub registMadnessChangeRate: f32,
	pub changeSleepResistPoint: i32,
	pub changeMadnessResistPoint: i32,
	pub sleepDamageRate: u8,
	pub applyPartsGroup: u8,
	#[deku(skip, cond = "version >= 11210015", bits = 3)]
	pub padbit_old: u8,
	#[deku(bits = 1)]
	pub isDestinedDeathHpMult: u8,
	#[deku(bits = 1)]
	pub requestForceJoinBlackSOS_B: u8,
	#[deku(bits = 1)]
	pub fakeTargetIgnoreMirageArts: u8,
	#[deku(bits = 1)]
	pub fakeTargetIgnoreAjin: u8,
	#[deku(bits = 1)]
	pub clearTarget: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x352_7: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x352_6: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub isHpBurnEffect: u8,
	#[deku(skip, cond = "version >= 11210015")]
	pub pad2: [u8;1],
	#[deku(skip, cond = "version < 11210015", bits = 3)]
	pub unknown_0x353_5: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x353_4: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x353_3: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x353_2: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x353_1: u8,
	#[deku(skip, cond = "version < 11210015", bits = 1)]
	pub unknown_0x353_0: u8,
	pub changeSuperArmorPoint: f32,
	pub changeSaPoint: f32,
	pub hugeEnemyPickupHeightOverwrite: f32,
	pub poisonDefDamageRate: f32,
	pub diseaseDefDamageRate: f32,
	pub bloodDefDamageRate: f32,
	pub curseDefDamageRate: f32,
	pub freezeDefDamageRate: f32,
	pub sleepDefDamageRate: f32,
	pub madnessDefDamageRate: f32,
	pub overwrite_maxBackhomeDist: i16,
	pub overwrite_backhomeDist: i16,
	pub overwrite_backhomeBattleDist: i16,
	pub overwrite_BackHome_LookTargetDist: i16,
	pub goodsConsumptionRate: f32,
	pub guardStaminaMult: f32,
	#[deku(skip, cond = "version < 11210015")]
	pub spiritDeathSpEffectId: i32,
	#[deku(skip, cond = "version >= 11210015")]
	pub unk3: [u8;4],
}
